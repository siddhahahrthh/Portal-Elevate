# Generated by Django 3.2.9 on 2023-07-23 11:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('team_name', models.CharField(max_length=50, unique=True)),
                ('email1', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('name1', models.CharField(max_length=50)),
                ('contact_no1', phonenumber_field.modelfields.PhoneNumberField(help_text='Add country code before the contact no.', max_length=128, region=None)),
                ('email2', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('name2', models.CharField(max_length=50)),
                ('contact_no2', phonenumber_field.modelfields.PhoneNumberField(help_text='Add country code before the contact no.', max_length=128, region=None)),
                ('email3', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('name3', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_no3', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Add country code before the contact no.', max_length=128, null=True, region=None)),
                ('email4', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('name4', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_no4', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Add country code before the contact no.', max_length=128, null=True, region=None)),
                ('ecoins', models.IntegerField(default=85000)),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.industry')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.IntegerField(verbose_name='Cost Per Unit')),
                ('quantity', models.IntegerField()),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_visible', models.BooleanField(default=False)),
                ('from_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FromTeam', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.item')),
                ('to_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ToTeam', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SellUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.item')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterialCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('raw_material', models.ForeignKey(limit_choices_to={'raw_material': True}, on_delete=django.db.models.deletion.CASCADE, to='home.item')),
                ('spot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.spot', verbose_name='Location')),
                ('team_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterialBuy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_1', models.IntegerField(default=0)),
                ('quantity_2', models.IntegerField(default=0)),
                ('quantity_3', models.IntegerField(blank=True, default=0, null=True)),
                ('quantity_4', models.IntegerField(blank=True, default=0, null=True)),
                ('raw_material_1', models.ForeignKey(limit_choices_to={'raw_material': True}, on_delete=django.db.models.deletion.CASCADE, related_name='RawMaterial1', to='home.item')),
                ('raw_material_2', models.ForeignKey(limit_choices_to={'raw_material': True}, on_delete=django.db.models.deletion.CASCADE, related_name='RawMaterial2', to='home.item')),
                ('raw_material_3', models.ForeignKey(blank=True, limit_choices_to={'raw_material': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RawMaterial3', to='home.item')),
                ('raw_material_4', models.ForeignKey(blank=True, limit_choices_to={'raw_material': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='RawMaterial4', to='home.item')),
                ('spot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.spot')),
                ('team_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('product', models.ForeignKey(limit_choices_to={'product': True}, on_delete=django.db.models.deletion.CASCADE, to='home.item')),
                ('team_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
